---
layout: post
title: How to build Rails 5 API only and Ember application
hero_image: /blog/images/heros/post-high.jpg
comments: true
author:
  name: Santiago Pastorino
  email: santiago@wyeworks.com
  twitter_handle: spastorino
  github_handle:  spastorino
  image:  /images/team/santiago-pastorino.jpg
  description: WyeWorks Co-Founder & CTO, Ruby on Rails Core Team Member
published: true
---

A few days ago, following long discussions, [Rails API was merged into Rails master branch](https://github.com/rails/rails/pull/19832).

Because of that, in our latest post we discussed how to build a API only application. We also show how to integrate it with a client-side application implemented with Backbone. If you've missed this post, you can check it out and learn more about [how to integrate Rails API with an Backbone application](http://wyeworks.com/blog/2015/6/11/how-to-build-a-rails-5-api-only-and-backbone-application).

In this issue, we will show how a very similar client-side application build with Ember can be integrated with the same backend application implemented with Rails API. Like in our previous post, we are going to use the Todo application from TodoMVC(todomvc.com).

In addition, we will comment about some issues that were fixed in Rails and Active Model Serializers in order to make easier this integration. Those improvements were the result of testing Rails API against an Ember client-side application, as part of our efforts looking for an optimal fit with the most popular javascript frameworks.

## Building the Backend

### Step 1: generate the Rails API only application

First of all, we need to generate a new Rails API only application from scratch. Rails 5 is not released yet, so we have to clone the Github repository and generate our application directly from the source code.

<pre>git clone git://github.com/rails/rails.git
cd rails
bundle exec railties/exe/rails new /tmp/my_api_app --api --edge</pre>

In case you want a detailed explanation about the list of directories and files generated by this command, please take a look at [our previous post](http://wyeworks.com/blog/2015/6/11/how-to-build-a-rails-5-api-only-and-backbone-application). 

However, if we compare with what was described in our previous issue, we can see a subtle difference in the generated Gemfile: [the `active-model-serializer` gem version changed from  0.10.0.rc1 a 0.10.0.rc2](https://github.com/rails/rails/commit/16db36b56685517c76385f9e0f877a9015bde2ca).

The new Active Model Serializer release candidate includes a [new adapter that works properly with the Ember's RESTAdapter](https://github.com/rails-api/active_model_serializers/pull/958). This addition simplified a lot the integration of our Rails API only backend and the Ember client-side application.
	
